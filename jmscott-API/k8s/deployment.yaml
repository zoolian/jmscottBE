# Keys and passwords are pulled from a k8s secret, then exported as environment variables. Those
# env vars are pulled in application.properties in the java project and passed to the mongo connection attributes.

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: jmscott-api
  name: jmscott-api
  namespace: default
spec:
  replicas: 2
  minReadySeconds: 50
  selector:
    matchLabels:
      app: jmscott-api
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: jmscott-api
    spec:
      containers:
      - image: zoolian/jmscott-api:0.1.2.RELEASE
        imagePullPolicy: IfNotPresent
        name: jmscott-api
        ports:
        - name: liveness-port
          containerPort: 8080
        env:
          - name: SECRETS_KEY
            valueFrom:
              secretKeyRef:
                name: jmscott-api-secret
                key: spring-jasypt-key
          - name: SECRETS_PASSWD
            valueFrom:
              secretKeyRef:
                name: jmscott-api-secret
                key: spring-jasypt-password
          - name: SECRETS_JWT_KEY
            valueFrom:
              secretKeyRef:
                name: jmscott-api-secret
                key: jwt-key
        volumeMounts:
          - name: config-volume
            mountPath: /workspace/config
        resources:
          requests:
            #cpu: 100m
            memory: 256Mi
          limits:
            #cpu: 150m
            memory: 512Mi
        readinessProbe:
          httpGet:
            path: /
            port: liveness-port
          failureThreshold: 5
          periodSeconds: 10
          initialDelaySeconds: 60
        livenessProbe:
          httpGet:
            path: /
            port: liveness-port
          failureThreshold: 5
          periodSeconds: 10
          initialDelaySeconds: 60
      volumes:
        - name: config-volume
          configMap:
            name: jmscott-api-configmap
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: jmscott-api
  name: jmscott-api-svc
  namespace: default
spec:
  ports:
  #- nodePort: 30567
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: jmscott-api
  sessionAffinity: ClientIP #Web app has sessions. Subsequent requests need to hit the same pod.
  #type: ClusterIP